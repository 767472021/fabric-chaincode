{
    "info": {
        "title": "Sample contract API",
        "version": "v0.0.1"
    },
    "imports": [
        "github.com/open-dovetail/fabric-chaincode/trigger/transaction",
        "github.com/open-dovetail/dovetail-contrib/activity/jsonmapper",
        "github.com/open-dovetail/fabric-chaincode/activity/get",
        "github.com/open-dovetail/fabric-chaincode/activity/put",
        "github.com/open-dovetail/fabric-chaincode/activity/query",
        "github.com/open-dovetail/fabric-chaincode/activity/gethistory",
        "github.com/project-flogo/contrib/activity/error"
    ],
    "contracts": {
        "demo-contract": {
            "name": "Marble Exchange",
            "transactions": [{
                    "name": "createMarble",
                    "parameters": [{
                            "name": "name",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "color",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "size",
                            "schema": {
                                "type": "integer"
                            }
                        },
                        {
                            "name": "owner",
                            "schema": {
                                "type": "string"
                            }
                        }
                    ],
                    "returns": {
                        "$ref": "#/components/schemas/marble"
                    },
                    "rules": [{
                            "description": "reject request if client is not exchange admin",
                            "condition": {
                                "description": "client is not admin",
                                "expr": "$.cid.role != \"admin\""
                            },
                            "actions": [{
                                "activity": "#error",
                                "terminate": true,
                                "code": 500,
                                "input": {
                                    "message": "user is not authorized to create marble"
                                }
                            }]
                        },
                        {
                            "description": "create or update ledger state",
                            "condition": {
                                "description": "client is admin"
                            },
                            "actions": [{
                                    "activity": "#jsonmapper",
                                    "name": "mapper",
                                    "input": {
                                        "data": {
                                            "$ref": "#/components/schemas/marble"
                                        }
                                    }
                                },
                                {
                                    "activity": "#put",
                                    "terminate": true,
                                    "input": {
                                        "key": "=$.name",
                                        "data": "=$mapper.result"
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "queryMarbleByOwner",
                    "parameters": [{
                        "name": "owner",
                        "schema": {
                            "type": "string"
                        }
                    }],
                    "returns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/marbleKeyValue"
                        }
                    },
                    "rules": [{
                            "description": "reject request if client is not the owner",
                            "condition": {
                                "description": "client name does not match marble owner",
                                "expr": "$.cid.name != $.owner"
                            },
                            "actions": [{
                                "activity": "#error",
                                "terminate": true,
                                "code": 500,
                                "input": {
                                    "message": "user is not authorized to execute the query"
                                }
                            }]
                        },
                        {
                            "description": "query the ledger state",
                            "condition": {
                                "description": "client name matches marble owner"
                            },
                            "actions": [{
                                "activity": "#query",
                                "terminate": true,
                                "config": {
                                    "query": "query statement that uses owner as input parameter"
                                },
                                "input": {
                                    "owner": "=$.owner"
                                }
                            }]
                        }
                    ]
                },
                {
                    "name": "marbleHistory",
                    "parameters": [{
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    }],
                    "returns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/marbleHistory"
                        }
                    },
                    "rules": [{
                        "description": "retrieve ledger history of a specified marble",
                        "actions": [{
                            "activity": "#gethistory",
                            "terminate": true,
                            "input": {
                                "key": "=$.name"
                            }
                        }]
                    }]
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "marble": {
                "$id": "marble",
                "properties": {
                    "docType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "owner": {
                        "type": "string"
                    }
                }
            },
            "marbleKeyValue": {
                "$id": "marbleKeyValue",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "$ref": "#/components/schemas/marble"
                    }
                }
            },
            "marbleHistory": {
                "$id": "marbleHistory",
                "properties": {
                    "txID": {
                        "type": "string"
                    },
                    "txTime": {
                        "type": "string"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "value": {
                        "$ref": "#/components/schemas/marble"
                    }
                }
            }
        }
    }
}